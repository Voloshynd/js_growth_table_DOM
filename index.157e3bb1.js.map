{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,C,S,E,C,E,O,A,S,C,E,G,M,O,C,G,O,E,E,E,I,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,CCEA,IAAM,EAAQ,SAAS,aAAa,CAAC,UAC/B,EAAO,SAAS,gBAAgB,CAAC,WAEnC,EAAc,EAAM,iBAAiB,CAAC,QAAQ,CAAC,MAAM,CACrD,EAAc,EAAM,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,MAAM,CAiF5C,SAAS,EAAY,CAAS,EAC5B,EAAK,OAAO,CAAC,SAAC,CAAd,EACM,EAAI,SAAS,CAAC,QAAQ,CAAC,IACzB,CAAA,EAAI,QAAQ,CAAG,CAAA,CADjB,CAGF,EACF,CAEA,SAAS,EAAU,CAAS,EAC1B,EAAK,OAAO,CAAC,SAAC,CAAd,EACM,EAAI,SAAS,CAAC,QAAQ,CAAC,IACzB,CAAA,EAAI,QAAQ,CAAG,CAAA,CADjB,CAGF,EACF,CA7FA,EAAK,OAAO,CAAC,SAAC,CAAd,EACE,EAAI,gBAAgB,CAAC,QAAS,SAAC,CAA/B,GACE,AAIJ,SAAqB,CAAS,EAC5B,OAAQ,GACN,IAAK,aAGH,IAAK,IAFC,EAAS,EAAM,iBAAiB,CAAC,SAAS,GAEvC,EAAI,EAAG,EAAI,EAAa,IAC/B,EAAO,UAAU,CAAC,EAIA,CAAA,MAAhB,GACF,EAAY,GAGV,EAAc,GAChB,EAAU,cAGZ,KAEF,KAAK,aACH,IAAM,EAAW,EAAM,IAAI,CAAC,MAAM,CAElC,EAAM,SAAS,CAAC,EAAW,GAIP,KAAhB,GACF,EAAY,GAGV,EAAc,GAChB,EAAU,cAGZ,KAEF,KAAK,gBACF,EAAG,EAAM,iBAAiB,CAAC,QAAQ,EAAE,OAAO,CAAC,SAAC,CAA9C,EACC,EAAI,UAAU,EAChB,GAIoB,MAAhB,GACF,EAAY,GAGV,EAAc,GAChB,EAAU,iBAGZ,KAEF,SACG,EAAG,EAAM,iBAAiB,CAAC,QAAQ,EAAE,OAAO,CAAC,SAAC,CAA9C,EACC,EAAI,UAAU,CAAC,EAAI,QAAQ,CAAC,MAAM,CAAG,EACvC,GAIoB,KAAhB,GACF,EAAY,GAGV,EAAc,GAChB,EAAU,gBAIhB,CACF,EA3EgB,EAAE,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,UAAW,IAAI,IAAI,GAC5D,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar field = document.querySelector(\".field\");\nvar btns = document.querySelectorAll(\".button\");\nvar fieldHeigth = field.firstElementChild.children.length;\nvar fieldLength = field.rows[0].cells.length;\nbtns.forEach(function(btn) {\n    btn.addEventListener(\"click\", function(e) {\n        modifyTable(e.target.className.replace(/button/g, \"\").trim());\n    });\n});\nfunction modifyTable(nameClass) {\n    switch(nameClass){\n        case \"append-row\":\n            var newRow = field.firstElementChild.insertRow();\n            for(var i = 0; i < fieldLength; i++)newRow.insertCell(i);\n            fieldHeigth++;\n            if (fieldHeigth === 10) setDisabled(nameClass);\n            if (fieldHeigth > 2) setEnable(\"remove-row\");\n            break;\n        case \"remove-row\":\n            var rowCount = field.rows.length;\n            field.deleteRow(rowCount - 1);\n            fieldHeigth--;\n            if (fieldHeigth === 2) setDisabled(nameClass);\n            if (fieldHeigth > 2) setEnable(\"append-row\");\n            break;\n        case \"append-column\":\n            _to_consumable_array(field.firstElementChild.children).forEach(function(row) {\n                row.insertCell();\n            });\n            fieldLength++;\n            if (fieldLength === 10) setDisabled(nameClass);\n            if (fieldLength > 2) setEnable(\"remove-column\");\n            break;\n        default:\n            _to_consumable_array(field.firstElementChild.children).forEach(function(row) {\n                row.deleteCell(row.children.length - 1);\n            });\n            fieldLength--;\n            if (fieldLength === 2) setDisabled(nameClass);\n            if (fieldLength > 2) setEnable(\"append-column\");\n            break;\n    }\n}\nfunction setDisabled(nameClass) {\n    btns.forEach(function(btn) {\n        if (btn.classList.contains(nameClass)) btn.disabled = true;\n    });\n}\nfunction setEnable(nameClass) {\n    btns.forEach(function(btn) {\n        if (btn.classList.contains(nameClass)) btn.disabled = false;\n    });\n}\n\n//# sourceMappingURL=index.157e3bb1.js.map\n","'use strict';\n\nconst field = document.querySelector('.field');\nconst btns = document.querySelectorAll('.button');\n\nlet fieldHeigth = field.firstElementChild.children.length;\nlet fieldLength = field.rows[0].cells.length;\n\nbtns.forEach((btn) => {\n  btn.addEventListener('click', (e) => {\n    modifyTable(e.target.className.replace(/button/g, '').trim());\n  });\n});\n\nfunction modifyTable(nameClass) {\n  switch (nameClass) {\n    case 'append-row':\n      const newRow = field.firstElementChild.insertRow();\n\n      for (let i = 0; i < fieldLength; i++) {\n        newRow.insertCell(i);\n      }\n      fieldHeigth++;\n\n      if (fieldHeigth === 10) {\n        setDisabled(nameClass);\n      }\n\n      if (fieldHeigth > 2) {\n        setEnable('remove-row');\n      }\n\n      break;\n\n    case 'remove-row':\n      const rowCount = field.rows.length;\n\n      field.deleteRow(rowCount - 1);\n\n      fieldHeigth--;\n\n      if (fieldHeigth === 2) {\n        setDisabled(nameClass);\n      }\n\n      if (fieldHeigth > 2) {\n        setEnable('append-row');\n      }\n\n      break;\n\n    case 'append-column':\n      [...field.firstElementChild.children].forEach((row) => {\n        row.insertCell();\n      });\n\n      fieldLength++;\n\n      if (fieldLength === 10) {\n        setDisabled(nameClass);\n      }\n\n      if (fieldLength > 2) {\n        setEnable('remove-column');\n      }\n\n      break;\n\n    default:\n      [...field.firstElementChild.children].forEach((row) => {\n        row.deleteCell(row.children.length - 1);\n      });\n\n      fieldLength--;\n\n      if (fieldLength === 2) {\n        setDisabled(nameClass);\n      }\n\n      if (fieldLength > 2) {\n        setEnable('append-column');\n      }\n\n      break;\n  }\n}\n\nfunction setDisabled(nameClass) {\n  btns.forEach((btn) => {\n    if (btn.classList.contains(nameClass)) {\n      btn.disabled = true;\n    }\n  });\n}\n\nfunction setEnable(nameClass) {\n  btns.forEach((btn) => {\n    if (btn.classList.contains(nameClass)) {\n      btn.disabled = false;\n    }\n  });\n}\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","_to_consumable_array","_array_without_holes","isArray","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","field","document","querySelector","btns","querySelectorAll","fieldHeigth","firstElementChild","children","fieldLength","rows","cells","setDisabled","nameClass","forEach","btn","classList","contains","disabled","setEnable","addEventListener","e","modifyTable","newRow","insertRow","insertCell","rowCount","deleteRow","row","deleteCell","target","className","replace","trim"],"version":3,"file":"index.157e3bb1.js.map"}